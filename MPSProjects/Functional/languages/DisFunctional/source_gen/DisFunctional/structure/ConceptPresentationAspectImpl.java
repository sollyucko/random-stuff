package DisFunctional.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Program;
  private ConceptPresentation props_RoutineCall;
  private ConceptPresentation props_RoutineDeclaration;
  private ConceptPresentation props_Statement;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Program:
        if (props_Program == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Program");
          props_Program = cpb.create();
        }
        return props_Program;
      case LanguageConceptSwitch.RoutineCall:
        if (props_RoutineCall == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RoutineCall");
          props_RoutineCall = cpb.create();
        }
        return props_RoutineCall;
      case LanguageConceptSwitch.RoutineDeclaration:
        if (props_RoutineDeclaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_RoutineDeclaration = cpb.create();
        }
        return props_RoutineDeclaration;
      case LanguageConceptSwitch.Statement:
        if (props_Statement == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Statement");
          props_Statement = cpb.create();
        }
        return props_Statement;
    }
    return null;
  }
}
